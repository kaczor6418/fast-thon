#!/bin/bash
source ./git-hooks/git-hooks-helpers.sh
source ./git-hooks/logs-colors.sh

export ESLINT_EXIT_CODE_TMP=$(mktemp)
echo 0 >"$ESLINT_EXIT_CODE_TMP"
export ESLINT_FILES_TO_ADD_AFTER_FIXES_TMP=$(mktemp)
echo "" >"$ESLINT_FILES_TO_ADD_AFTER_FIXES_TMP"
export PRETTIER_EXIT_CODE_TMP=$(mktemp)
echo 0 >"$PRETTIER_EXIT_CODE_TMP"
export PRETTIER_FILES_TO_ADD_AFTER_FIXES_TMP=$(mktemp)
echo "" >"$PRETTIER_FILES_TO_ADD_AFTER_FIXES_TMP"
export FIREBASE_SECURITY_RULES_EXIT_CODE_TMP=$(mktemp)
echo 0 >"$FIREBASE_SECURITY_RULES_EXIT_CODE_TMP"

function add_files_to_staged_tree() {
  files_paths=("$@")
  if [[ -n "${files_paths// /}" ]]; then
    git add $files_paths
  fi
}

./git-hooks/run-linters.sh &
./git-hooks/run-code-formatters.sh &
./git-hooks/run-firebase-security-rules-tests.sh &
wait
IFS= read -r eslint_exit_code <"$ESLINT_EXIT_CODE_TMP"
IFS= read -r eslint_files_to_add_after_fix <"$ESLINT_FILES_TO_ADD_AFTER_FIXES_TMP"
IFS= read -r prettier_exit_code <"$PRETTIER_EXIT_CODE_TMP"
IFS= read -r prettier_files_to_add_after_fix <"$PRETTIER_FILES_TO_ADD_AFTER_FIXES_TMP"
IFS= read -r firebase_exit_code <"$FIREBASE_SECURITY_RULES_EXIT_CODE_TMP"
if [ $eslint_exit_code = 0 ]; then
  echo -e "${GREEN} 🌀 ESLint finished SUCCESSFULLY ${NC}"
else
  echo -e "${RED} 🌀 ESLint finished UNSUCCESSFULLY ${NC}"
fi
if [ $prettier_exit_code = 0 ]; then
  echo -e "${GREEN} 📝 Prettier finished SUCCESSFULLY ${NC}"
else
  echo -e "${RED} 📝 Prettier finished UNSUCCESSFULLY ${NC}"
fi
if [ $firebase_exit_code = 0 ]; then
  echo -e "${GREEN} 🔥 Firebase security rules are VALID ${NC}"
else
  echo -e "${RED} 🔥 Firebase security rules are INVALID ${NC}"
fi

if [ $eslint_exit_code = 0 ] && [ $prettier_exit_code = 0 ] && [ $firebase_exit_code = 0 ]; then
  add_files_to_staged_tree "${eslint_files_to_add_after_fix[*]} ${prettier_files_to_add_after_fix[*]}"
  echo -e "${GREEN} ✔ Committed successfully *^____^* ${NC}"
  exit 0
else
  echo -e "${RED} ❌ Couldn't commit changes dues to above errors ＞﹏＜ ${NC}"
  exit 1
fi
